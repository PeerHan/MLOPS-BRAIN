stages:
  - lint
  - test
  - build_and_register_containers

default:
  timeout: 1m
  tags:
    - brain_transform_runner

.build_container: &build_container
  image:
    name: gcr.io/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  before_script:
    - echo "{\"auths\":{\"registry.code.fbi.h-da.de\":{\"username\":\"brain_transform\",\"password\":\"$TOKEN_MAINTAINER\"}}}" > /kaniko/.docker/config.json

.python-setup: &python-setup
  before_script:
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt

linting:
  image: python:3.11
  stage: lint
  <<: *python-setup
  script:
    - pip install pylint
    - pylint --rcfile=.pylintrc src/

featureizing_test:
  image: python:3.11
  stage: test
  <<: *python-setup
  script:
    - pytest tests/ --disable-warnings

build_transform_container:
  <<: *build_container
  stage: build_and_register_containers
  variables:
    CONTAINER_NAME: "transform"
    CONTAINER_DESTINATION: "registry.code.fbi.h-da.de/mlops-brain/brain_transform/${CONTAINER_NAME}"
    VERSION_TAG: "${CI_COMMIT_SHORT_SHA}"
    DOCKERFILE: "Dockerfile"
  script:
    - echo "Building transform container..."
    - echo "COMMIT_TAG ${CI_COMMIT_SHORT_SHA}"
    - |
      /kaniko/executor \
        --context "./" \
        --dockerfile "./${DOCKERFILE}" \
        --build-arg=COMMIT_TAG=${CI_COMMIT_SHORT_SHA} \
        --destination "${CONTAINER_DESTINATION}:${VERSION_TAG}" \
        --destination "${CONTAINER_DESTINATION}:latest"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - src/main.py
        - src/signal_toolkit.py
        - Dockerfile
    - when: never

build_api_container:
  <<: *build_container
  stage: build_and_register_containers
  variables:
    CONTAINER_NAME: "api"
    CONTAINER_DESTINATION: "registry.code.fbi.h-da.de/mlops-brain/brain_transform/${CONTAINER_NAME}"
    VERSION_TAG: "${CI_COMMIT_SHORT_SHA}"
    DOCKERFILE: "Dockerfile.api"
    API_HOST: ${API_HOST:-"0.0.0.0"}
    API_PORT: ${API_PORT:-"8000"}
  script:
    - echo "Building API container..."
    - echo "COMMIT_TAG ${CI_COMMIT_SHORT_SHA}"
    - echo "COMMIT_HASH ${CI_COMMIT_SHA}"
    - |
      /kaniko/executor \
        --context "./" \
        --dockerfile "./${DOCKERFILE}" \
        --build-arg=COMMIT_TAG=${CI_COMMIT_SHORT_SHA} \
        --build-arg=COMMIT_HASH=${CI_COMMIT_SHA} \
        --build-arg=API_HOST=${API_HOST} \
        --build-arg=API_PORT=${API_PORT} \
        --destination "${CONTAINER_DESTINATION}:${VERSION_TAG}" \
        --destination "${CONTAINER_DESTINATION}:latest"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - src/api.py
        - Dockerfile.api
        - src/signal_toolkit.py
    - when: never

build_pipeline_api_container:
  <<: *build_container
  stage: build_and_register_containers
  variables:
    CONTAINER_NAME: "pipeline_api"
    CONTAINER_DESTINATION: "registry.code.fbi.h-da.de/mlops-brain/brain_transform/${CONTAINER_NAME}"
    VERSION_TAG: "${CI_COMMIT_SHORT_SHA}"
    DOCKERFILE: "Dockerfile.pipeline_api"
  script:
    - echo "Building pipeline API container..."
    - echo "COMMIT_TAG ${CI_COMMIT_SHORT_SHA}"
    - echo "COMMIT_HASH ${CI_COMMIT_SHA}"
    - |
      /kaniko/executor \
        --context "./" \
        --dockerfile "./${DOCKERFILE}" \
        --build-arg=COMMIT_TAG=${CI_COMMIT_SHORT_SHA} \
        --destination "${CONTAINER_DESTINATION}:${VERSION_TAG}" \
        --destination "${CONTAINER_DESTINATION}:latest"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
      changes:
        - src/pipeline_api.py
        - Dockerfile.pipeline_api
    - when: never
